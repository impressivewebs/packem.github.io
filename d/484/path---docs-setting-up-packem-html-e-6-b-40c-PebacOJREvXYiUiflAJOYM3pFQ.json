{"data":{"markdownRemark":{"html":"<p>This section outlines basic configuration options to get you started. Based off a simple app, you could extend your needs further to fit your requirements.</p>\n<p>After installing Packem through the <a href=\"/docs/getting-started\">various methods</a>, setting up Packem will be a matter of adding a single YAML file at the root of your project. Packem needs this configuration file to tell exactly what and how your code should be bundled.</p>\n<h2 id=\"why-static-configuration-why-yaml\"><a href=\"#why-static-configuration-why-yaml\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why static configuration? Why YAML? </h2>\n<p>A static configuration is <strong>enough to declaratively tell Packem what to do</strong> in your project so you have control of how Packem should run and what options to make that best suits your project’s needs.</p>\n<h2 id=\"creating-the-configuration-file\"><a href=\"#creating-the-configuration-file\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating the configuration file </h2>\n<p>In the root of your project’s file structure, add a new file and name it <code class=\"gatsby-code-text\">packem.config.yml</code>. This file will contain all the necessary configuration options for your project. In this file, copy the following content into it and save.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"gatsby-code-yaml\"><code class=\"gatsby-code-yaml\"><span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"./src/index.js\"</span>\n<span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"./dist/bundle.js\"</span></code></pre></div>\n<p>As you might’ve noticed, the <code class=\"gatsby-code-text\">root</code> field is where the bundling process starts and the <code class=\"gatsby-code-text\">output</code> field is where your final concatenated bundle ends up. You need to point to a file to get the root and output right. Packem takes care of the rest of the process according to how you’ve defined it.</p>\n<p>That’s all you literally need! You have successfully set up a Packem project from scratch. In the next section we’ll discuss more on how to use the configuration file to make the impossible happen.</p>","frontmatter":{"title":"Setting Up Packem","next":"extended-configurations.html"},"fields":{"path":"content\\docs\\setting-up-packem.md","slug":"docs/setting-up-packem.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"docs/setting-up-packem.html"}}