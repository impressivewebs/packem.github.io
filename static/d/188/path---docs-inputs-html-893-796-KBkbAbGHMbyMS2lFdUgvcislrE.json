{"data":{"markdownRemark":{"html":"<p>To initiate the bundling process, you’ll need to point to a static file residing on the system.</p>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>Packem <em>v0.1.4</em> and below don’t support the Multiple Inputs feature so their usage as far as this is concerned is highly discouraged. Additionally, the input field was originally called <code class=\"gatsby-code-text\">root</code>, but is deprecated since <em>v0.2</em>.</p>\n</blockquote>\n<p>Packem expects the <code class=\"gatsby-code-text\">input</code> field to be a string i.e. <code class=\"gatsby-code-text\">input: &quot;index.js&quot;</code>. This is in the case where only a single input point is desired. On the contrary, if you need to have multiple input points, you can specify them as an array of strings:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"gatsby-code-yaml\"><code class=\"gatsby-code-yaml\"><span class=\"token key atrule\">input</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token string\">\"./src/index.js\"</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token string\">\"./app/utils.js\"</span></code></pre></div>\n<p>When a bundle is generated, the module graph differentiates between regular and common dependencies. These common dependencies are then isolated into the a seperate file which is dynamically imported into the runtime. Internally, this implementation results in:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">_packem<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./bundle.commons.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  _packem<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mod_X7afIu4ee\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"./src/index.js\"</span>\n  _packem<span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mod_7a5efDqZ5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"./app/utils.js\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Take note that the common dependencies are imported first, then the individual bundles are called in the <code class=\"gatsby-code-text\">then</code> arm of the fetch <strong>in order of definition</strong> in the configuration.</p>","frontmatter":{"title":"Inputs","next":"output-formats.html"},"fields":{"path":"content\\docs\\inputs.md","slug":"docs/inputs.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"docs/inputs.html"}}