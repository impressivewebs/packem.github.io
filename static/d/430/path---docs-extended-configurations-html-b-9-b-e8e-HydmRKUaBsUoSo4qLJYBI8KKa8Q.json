{"data":{"markdownRemark":{"html":"<p>This section entails the necessary details required to use Packem’s configuration system efficiently.</p>\n<h2 id=\"using-custom-babel-presets-andor-plugins-with-packems-transformer\"><a href=\"#using-custom-babel-presets-andor-plugins-with-packems-transformer\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using custom Babel presets and/or plugins with Packem’s transformer</h2>\n<p>Module bundling is not only confined to string concatenation so allowing tools like <a href=\"https://babeljs.io/\">Babel</a> to transform your code is necessary.</p>\n<p>Create a new field relative to the <code class=\"gatsby-code-text\">input</code> and <code class=\"gatsby-code-text\">output</code> fields called <code class=\"gatsby-code-text\">transformer</code>. Under this field, add a <code class=\"gatsby-code-text\">babelPresets</code> and/or a <code class=\"gatsby-code-text\">babelPlugins</code> field(s). Both fields accept an array of strings that indicate which Babel presets and/or plugins should be used during transformation respectively.</p>\n<p>By default, Packem includes <code class=\"gatsby-code-text\">@babel/core</code> so you don’t need to install it. The configuration psuedocode below shows how to add <code class=\"gatsby-code-text\">@babel/preset-env</code> and <code class=\"gatsby-code-text\">@babel/plugin-syntax-dynamic-import</code> to your code.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"gatsby-code-yaml\"><code class=\"gatsby-code-yaml\"><span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> ./src/my<span class=\"token punctuation\">-</span>root.js\n<span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> ./dist/\n\n<span class=\"token comment\"># Here's where you configure Babel to your needs.</span>\n<span class=\"token key atrule\">transformer</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">babelPresets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">babelPlugins</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/plugin-syntax-dynamic-import\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p><strong>Note</strong></p>\n<ul>\n<li>You must manually install your presets and/or plugins with a package manager.</li>\n<li>Packem doesn’t take <strong>ANY</strong> externally defined Babel configurations as in <code class=\"gatsby-code-text\">package.json</code>, <code class=\"gatsby-code-text\">.babelrc</code> or <code class=\"gatsby-code-text\">babel.config.js</code>. You must define your presets and/or plugins under the <code class=\"gatsby-code-text\">transformer</code> field.</li>\n</ul>\n</blockquote>\n<h2 id=\"includingexcluding-globs-from-transformation\"><a href=\"#includingexcluding-globs-from-transformation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Including/excluding globs from transformation</h2>\n<p>Use the <code class=\"gatsby-code-text\">include</code> and/or <code class=\"gatsby-code-text\">exclude</code> fields under <code class=\"gatsby-code-text\">transformer</code> to include and/or exclude globs of files from being transformed respectively. Since <code class=\"gatsby-code-text\">node_modules</code> is usually expected to be transformed, it is clear cut that it is moreso unnecessary to allow <code class=\"gatsby-code-text\">node_modules</code> being transformed. There might be specific reasons as to why you would need to bundle with <code class=\"gatsby-code-text\">node_modules</code> especially in the case where building for the browser is necessary and a certain library exports unbundled code like JSX. Both <code class=\"gatsby-code-text\">include</code> and <code class=\"gatsby-code-text\">exclude</code> accept a glob as a value.</p>\n<p>For example, to exclude <code class=\"gatsby-code-text\">node_modules</code> and include every JavaScript file under <code class=\"gatsby-code-text\">src</code> recursively,</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"gatsby-code-yaml\"><code class=\"gatsby-code-yaml\"><span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> ./src/my<span class=\"token punctuation\">-</span>root.js\n<span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> ./dist/\n\n<span class=\"token key atrule\">transformer</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># The double stars makes it match deeper (exhaustively)</span>\n  <span class=\"token comment\"># into sub folders. A glob is recursive so a list of</span>\n  <span class=\"token comment\"># matches is returned from this glob.</span>\n  <span class=\"token key atrule\">include</span><span class=\"token punctuation\">:</span> src/**/*.js\n  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> node_modules</code></pre></div>\n<h2 id=\"resources\"><a href=\"#resources\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resources</h2>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\">Glob pattern matching, Wikipedia.</a></li>\n</ul>","frontmatter":{"title":"Extended Configurations","next":"output-formats.html"},"fields":{"path":"content\\docs\\extended-configurations.md","slug":"docs/extended-configurations.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"docs/extended-configurations.html"}}